<?php
/**
 * @file
 *
 */

function decro_tutorial_menu() {
	return array(
		'behaviors-tutorial' => array(
			'page callback' => 'decro_tutorial_behaviors',
			'access callback' => TRUE,
			'title' => 'Drupal.behaviors Tutorial',
		),
		'bootstrap-calendar-tutorial' => array(
			'page callback' => 'decro_tutorial_bootstrap_calendar',
			'access callback' => TRUE,
			'title' => 'Calendar Page using Bootstrap',
			'file' => 'decro_tutorial.bootstrap.calendar.inc',
		),
	);
}

/**
 * Implements hook_theme()
 */
function decro_tutorial_theme($existing, $type, $theme, $path) {
	return array(
		'decro-tutorial-calendar' => array(
			'template' => 'decro-tutorial-calendar',
			'path' => $path . '/theme',
		),
	);
}

/**
 * Page callback for the /behaviors-tutorial slug
 */
function decro_tutorial_behaviors() {
	// this is the start of the render array that Drupal
	// will convert to HTML markup
	$page = array();
 
	# create a "DIV" element with an id of 'decro-container'
	$page['container'] = array(
		'#type' => 'container',
		'#attributes' => array(
			'id' => 'decro-container',
			'class' => array('playground'),    # remember that class has to be an array,
		),
	);
 
	// create a collection of settings to be used in the Javacript file (to be created shortly)
	$settings = array(
		'team_id' => 'duke',
		'team_sport' => 'cbb',
		'season' => '2015',
	);
	
	$page['#attached'] = array();
	$page['#attached']['js'][] = array(
		// notice how I use the module name as the key mapping for
		// these settings
		'data' => array('decro_tutorial' => $settings),
		'type' => 'setting',
	);
 
	// next, I will attach the Javascript file that will 'consume' these
	// settings
	$page['#attached']['js'][] = drupal_get_path('module', 'decro_tutorial') . '/js/decro_tutorial.init.js';
	
	$page['fluff'] = array(
		'#markup' => t('This is just some extra fluff that has no bearing on the example.'),
	);
 
	// return the $page array and let Drupal render it
	return $page;
}

function decro_tutorial_calendar_day_elements($dateArray) {
	$elements[] = array(
		'#markup' => 'Events go here',
		'#prefix' => '<div>',
		'#suffix' => '</div>',
	);
	return $elements;
}